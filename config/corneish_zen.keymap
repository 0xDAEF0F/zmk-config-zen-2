#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        chosen {
                zmk,matrix_transform = &default_transform;
        };
};

/ {
        macros {
                ZMK_MACRO(alacritty, 
                        wait-ms = <20>;
                        tap-ms = <30>;
                        bindings 
                        = <&kp LG(SPACE)>
                        , <&kp A &kp L &kp A &kp C &kp R>
                        , <&macro_wait_time 120>
                        , <&kp ENTER>
                        ;
                )
                ZMK_MACRO(chrome, 
                        wait-ms = <20>;
                        tap-ms = <30>;
                        bindings 
                        = <&kp LG(SPACE)>
                        , <&kp C &kp H &kp R &kp O &kp M>
                        , <&macro_wait_time 120>
                        , <&kp ENTER>
                        ;
                )
        };
        behaviors {
                gqt: global-quick-tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "GLOBAL_QUICK_TAP";
                        #binding-cells = <2>;
                        flavor = "tap-preferred";
                        tapping-term-ms = <180>;
                        quick-tap-ms = <125>;
                        global-quick-tap;
                        bindings = <&kp>, <&kp>;
                };
                tiesc: tilde_escape {
                        compatible = "zmk,behavior-mod-morph";
                        label = "TILDE_ESCAPE";
                        #binding-cells = <0>;
                        bindings = <&kp ESC>, <&kp TILDE>;
                        mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "COLEMAK";
                        bindings = <
   &kp TAB     &kp Q &kp W &kp F       &kp P        &kp G    &kp J &kp L        &kp U        &kp Y       &kp SEMI &kp BSPC
   &tiesc      &kp A &kp R &gqt LALT S &gqt LCTRL T &kp D    &kp H &kp N &kp E  &gqt RCTRL I &gqt RALT O &kp SQT
   &kp LG(TAB) &kp Z &kp X &kp C       &kp V        &kp B    &kp K &kp M        &kp COMMA    &kp DOT     &kp FSLH &kp LG(TAB)
                     &mt LSHFT LPAR &lt 1 ENTER  &mt LGUI N0    &mt RGUI QMARK &lt 2 SPACE &mt RSHFT LBRC
                        >;
                };
                lower_layer {
                        label = "NUMBER";
                        bindings = <
   &kp TAB &kp N1                   &kp N2 &kp N3   &kp N4      &kp N5     &kp N6     &kp N7            &kp N8          &kp N9    &kp N0           &kp BSPC
   &trans  &trans                   &trans &chrome &alacritty  &trans     &kp LEFT   &kp DOWN          &kp UP          &kp RIGHT &kp C_PLAY_PAUSE &trans
   &trans  &kp LG(LC(LS(NUMBER_4))) &kp F1 &kp F2   &kp F3      &kp F4     &kp C_PREV &kp C_VOLUME_DOWN &kp C_VOLUME_UP &kp DOT   &kp C_NEXT       &trans
                                           &trans &trans &mt LGUI N0     &kp RGUI &trans &trans
                        >;
                };
                raise_layer {
                        label = "SYMBOL";
                        bindings = <
   &trans    &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp GRAVE &trans   &trans &trans   &trans   &trans       &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp PIPE &trans
   &trans    &trans   &trans &trans   &trans   &trans       &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp BSLH &trans
                       	&kp LSHIFT &trans &kp LGUI       &kp RGUI   &trans    &trans
                        >;
                };
        };
};
